#!/bin/bash
# „É≠„Éº„Ç´„É´„Åß„É´„Éº„ÉóÂá¶ÁêÜ„Çí„ÉÜ„Çπ„Éà„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà

# „ÉÜ„Çπ„ÉàÁî®„ÅÆ„Éà„Éî„ÉÉ„ÇØ„Éá„Éº„ÇøÔºàÂÆüÈöõ„ÅÆGitHub Actions„ÅßÁîüÊàê„Åï„Çå„Çã„Çà„ÅÜ„Å™ÂΩ¢ÂºèÔºâ
TOPICS="1. OpenAI GPT-5„ÅÆÂïÜÁî®Â±ïÈñã„Å®Êñ∞Ê©üËÉΩ„ÅÆÁô∫Ë°®
2. Google Gemini 2.0„ÅÆ‰ºÅÊ•≠Âêë„ÅëAPIÊã°ÂÖÖ
3. Microsoft Copilot for Business 365„ÅÆÂ∞éÂÖ•Êã°Â§ß
4. Anthropic Claude 3.5„ÅÆÊé®Ë´ñËÉΩÂäõÂêë‰∏ä„Ç¢„ÉÉ„Éó„Éá„Éº„Éà  
5. Meta LLaMA„ÅÆÊúÄÊñ∞„É¢„Éá„É´„Å®„Ç™„Éº„Éó„É≥„ÇΩ„Éº„ÇπÊà¶Áï•
6. NVIDIA H200 GPU„Å´„Çà„ÇãAIË®àÁÆóÂá¶ÁêÜ„ÅÆÈ´òÈÄüÂåñ
7. ÁîüÊàêAIË¶èÂà∂Ê≥ïÊ°à„ÅÆ‰∏ñÁïåÁöÑ„Å™ÂãïÂêë„Å®‰ºÅÊ•≠„Å∏„ÅÆÂΩ±Èüø
8. AIÁîªÂÉèÁîüÊàêÊäÄË°ì„ÅÆËëó‰ΩúÊ®©ÂïèÈ°å„Å®Ëß£Ê±∫Á≠ñ„ÅÆÊ®°Á¥¢
9. Ëá™ÂãïÈÅãËª¢AI„ÅÆÂïÜÁî®Âåñ„Å´Âêë„Åë„ÅüÊúÄÊñ∞ÊäÄË°ìÂãïÂêë
10. ÂåªÁôÇË®∫Êñ≠AI„ÅÆÁ≤æÂ∫¶Âêë‰∏ä„Å®Ë¶èÂà∂ÂΩìÂ±Ä„ÅÆÂØæÂøú"

echo "=== GitHub Actions „É´„Éº„ÉóÂá¶ÁêÜ„ÉÜ„Çπ„Éà ==="
echo "Topics to process:"
printf '%s\n' "$TOPICS"
echo ""

# ÂÆüÈöõ„ÅÆGitHub Actions„Å®Âêå„ÅòÂá¶ÁêÜ
TOPIC_INDEX=1
GENERATED_COUNT=0

set +e  # Continue on errors
export LC_ALL=C  # Set locale to avoid encoding issues

# „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±ËøΩÂä†
echo "üîç Debug: Total topics found: $(echo "$TOPICS" | wc -l)"
echo "üîç Debug: Topics content:"
printf '%s\n' "$TOPICS" | nl
echo "üîç Debug: Starting loop with TOPIC_INDEX=$TOPIC_INDEX, GENERATED_COUNT=$GENERATED_COUNT"
echo ""

while IFS= read -r TOPIC_LINE; do
  if [ -z "$TOPIC_LINE" ]; then
    continue
  fi
  
  echo "üîç Debug: Processing topic $TOPIC_INDEX: '$TOPIC_LINE'"
  
  # „Çà„ÇäÂÆâÂÖ®„Å™sedÂá¶ÁêÜ
  TOPIC=$(printf '%s\n' "$TOPIC_LINE" | sed 's/^[0-9]*\. *//')
  echo "üîç Debug: Extracted topic: '$TOPIC'"
  echo "üìù Generating article $TOPIC_INDEX: $TOPIC"
  
  # Category determination (caseÊñá„Å´Â§âÊõ¥)
  CATEGORY="ÊúÄÊñ∞ÂãïÂêë"
  case "$TOPIC" in
      *Á†îÁ©∂*|*Ë´ñÊñá*|*Â≠¶‰ºö*) CATEGORY="Á†îÁ©∂Ë´ñÊñá" ;;
      *ÊäÄË°ì*|*„Ç¢„É´„Ç¥„É™„Ç∫„É†*|*‰ªïÁµÑ„Åø*) CATEGORY="ÊäÄË°ìËß£Ë™¨" ;;
      *Â∞éÂÖ•*|*‰∫ã‰æã*|*Ê¥ªÁî®*) CATEGORY="ÂÆüË£Ö‰∫ã‰æã" ;;
      *Â∏ÇÂ†¥*|*ÂàÜÊûê*|*‰∫àÊ∏¨*) CATEGORY="Ê•≠ÁïåÂàÜÊûê" ;;
  esac
  
  echo "üìÇ Category: $CATEGORY"
  
  # Gemini APIÂëº„Å≥Âá∫„Åó„ÅÆ‰ª£„Çè„Çä„Å´„ÉÄ„Éü„Éº„Éï„Ç°„Ç§„É´‰ΩúÊàê
  echo "# $TOPIC

„Åì„ÅÆË®ò‰∫ã„ÅØ„Äå$TOPIC„Äç„Å´„Å§„ÅÑ„Å¶Ëß£Ë™¨„Åó„Åæ„Åô„ÄÇ

## Ê¶ÇË¶Å„Å®ËÉåÊôØ
„ÉÜ„Çπ„ÉàÁî®„ÅÆË®ò‰∫ã„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åß„Åô„ÄÇ

## Ë©≥Á¥∞„Å™ÊäÄË°ì„Éª„Éì„Ç∏„Éç„ÇπÂÜÖÂÆπ  
ÂÖ∑‰ΩìÁöÑ„Å™ÂÜÖÂÆπ„Åå„Åì„Åì„Å´ÂÖ•„Çä„Åæ„Åô„ÄÇ

## Â∏ÇÂ†¥„ÉªÁ´∂Âêà„Å∏„ÅÆÂΩ±Èüø
Â∏ÇÂ†¥„Å∏„ÅÆÂΩ±ÈüøÂàÜÊûê„Åå„Åì„Åì„Å´ÂÖ•„Çä„Åæ„Åô„ÄÇ

## ‰ªäÂæå„ÅÆÂ±ïÊúõ
Â∞ÜÊù•„ÅÆÂ±ïÊúõ„Åå„Åì„Åì„Å´ÂÖ•„Çä„Åæ„Åô„ÄÇ
" > "_temp/article-${TOPIC_INDEX}.md"
  
  if [ -s "_temp/article-${TOPIC_INDEX}.md" ]; then
    # „Çà„ÇäÂÆâÂÖ®„Å™ÊñáÂ≠óÂàóÂá¶ÁêÜ
    TITLE=$(printf '%s' "$TOPIC" | head -c 80)
    SLUG=$(printf '%s' "$TOPIC" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-' | sed 's/--*/-/g' | sed 's/^-\|-$//g' | head -c 50)
    FILENAME="$(date +%Y-%m-%d)-${TOPIC_INDEX}-${SLUG}.md"
    
    echo "üìÑ Generated filename: $FILENAME"
    
    # Store in temp for processing using printf
    printf '%s\n' "---" "layout: post" "title: \"$TITLE\"" "date: $(date +%Y-%m-%d\ %H:%M:%S\ %z)" "categories: [\"$CATEGORY\"]" "tags: [\"AI\", \"ÊúÄÊñ∞„Éã„É•„Éº„Çπ\", \"ÊäÄË°ìÂãïÂêë\"]" "author: \"AIË®ò‰∫ãÁîüÊàê„Ç∑„Çπ„ÉÜ„É†\"" "excerpt: \"AIÊ•≠Áïå„ÅÆÊúÄÊñ∞ÂãïÂêë„Å´„Å§„ÅÑ„Å¶Ë©≥„Åó„ÅèËß£Ë™¨„Åó„Åæ„Åô„ÄÇ\"" "reading_time: 8" "---" > "_temp/temp-${FILENAME}"
    
    # „Çà„ÇäÂÆâÂÖ®„Å™„Éï„Ç°„Ç§„É´Âá¶ÁêÜ
    tail -n +2 "_temp/article-${TOPIC_INDEX}.md" | sed '/^```markdown$/d' | sed '/^```$/d' >> "_temp/temp-${FILENAME}"
    
    echo "‚úÖ Generated: temp-${FILENAME}"
    GENERATED_COUNT=$((GENERATED_COUNT + 1))
  else
    echo "‚ùå Failed to generate: $TOPIC"
  fi
  
  TOPIC_INDEX=$((TOPIC_INDEX + 1))
  echo "üîç Debug: Completed topic $((TOPIC_INDEX - 1)), moving to next..."
  echo ""
done < <(printf '%s\n' "$TOPICS")  # „Éó„É≠„Çª„ÇπÁΩÆÊèõ„Çí‰ΩøÁî®„Åó„Å¶„Çµ„Éñ„Ç∑„Çß„É´ÂïèÈ°å„ÇíËß£Ê±∫

set -e  # Re-enable exit on error

echo "üîç Debug: Loop completed with TOPIC_INDEX=$TOPIC_INDEX, GENERATED_COUNT=$GENERATED_COUNT"
echo "üìä Generated $GENERATED_COUNT articles"

echo ""
echo "=== ÁµêÊûúÁ¢∫Ë™ç ==="
echo "Generated files in _temp/:"
ls -la _temp/temp-*.md 2>/dev/null || echo "No temp files found"

echo ""
echo "=== „ÉÜ„Çπ„ÉàÂÆå‰∫Ü ==="