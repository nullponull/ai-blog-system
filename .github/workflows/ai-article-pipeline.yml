name: AI Article Generation & Publishing Pipeline

on:
  schedule:
    - cron: '0 9 * * *'  # 毎日9時に実行
  workflow_dispatch:      # 手動実行も可能

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          mkdir -p _temp

      - name: Install Python and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Generate AI Article with Gemini API
        id: generate_article
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python generate_article_standalone.py

      - name: Lint and Fix Generated Article
        run: |
          # textlintで記事を校正（エラーがあっても継続）
          if [ -f "_temp/new-article.md" ]; then
            npx textlint _temp/new-article.md --fix || echo "Textlint completed with warnings"
          else
            echo "Article file not found, skipping textlint"
          fi

      - name: Create final article file
        run: |
          # 記事タイトルを取得
          TITLE=$(head -n 1 _temp/new-article.md | sed 's/# //' | sed 's/[[:space:]]*$//')
          
          # ファイル名用にタイトルを変換
          SLUG=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-zA-Z0-9\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
          
          # 日付ベースのファイル名
          FILENAME="$(date +%Y-%m-%d)-$SLUG.md"
          
          # Front matterを作成
          cat > "_posts/$FILENAME" << EOF
          ---
          layout: post
          title: "$TITLE"
          date: $(date +%Y-%m-%d\ %H:%M:%S\ %z)
          categories: ["AI技術", "最新動向"]
          tags: ["AI", "機械学習", "技術解説", "最新研究"]
          author: "AI記事生成システム"
          excerpt: "最新のAI技術動向について、Google検索で調査した最新情報を基に詳しく解説します。"
          reading_time: 8
          ---
          EOF
          
          # 記事本文を追加（タイトル行を除く）
          tail -n +2 _temp/new-article.md >> "_posts/$FILENAME"
          
          echo "Generated article: $FILENAME"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install Jekyll dependencies
        run: |
          # Gemfileが既に存在するので、bundlerで依存関係をインストール
          bundle install

      - name: Build with Jekyll
        run: bundle exec jekyll build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 60000  # 1 minute timeout

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add _posts/*
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "feat: Add new AI article - $(date +%Y-%m-%d)"
            git push
          fi